homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 51.2731
  longitude: 4.6653
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 74
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Brussels

  customize:
    sun.sun:
      hidden: true
    sensor.system_monitor_process_deluged:
      hidden: true
    sensor.system_monitor_process_delugeweb:
      hidden: true
    sensor.system_monitor_process_flexget:
      hidden: true
    sensor.system_monitor_process_plexpy:
      hidden: true
    sensor.system_monitor_process_plex_media_server:
      hidden: true

 #   group.all_devices:
  #    hidden: false
   #x   friendly_name: Devices

zone:
  name: Home
  latitude: 51.273616
  longitude: 4.785493

zone 2:
  name: Work
  latitude: 51.272387
  longitude: 4.655792

zone 3:
  name: Joke's Home
  latitude: 51.162589
  longitude: 4.834117

# Enables the frontend
frontend:

http:
  api_password: !secret http_password
  trusted_networks:
    - 192.168.1.0/24

# TODO: Re-enable after it works
# Checks for available updates
#updater:

# Discover some devices automatically
#discovery:

# Enables support for tracking state changes over time.
history:

recorder:
  purge_days: 7

# View all events in a logbook
logbook:

google:
  client_id: 72083380627-0itnt9cn81ivs7i5a71r583qrg85k6hc.apps.googleusercontent.com
  client_secret: !secret google_secret

calendar:
  - platform: google
    client_id: 72083380627-0itnt9cn81ivs7i5a71r583qrg85k6hc.apps.googleusercontent.com
    client_secret: !secret google_secret

# Track the sun
sun:

# Setup home page groups
group:
  # Views
  weather:
    name: Weather
    view: yes
    entities:
      - group.weathergroup
      - weather.openweathermap
  server:
    view: yes
    name: Server
    icon: mdi:server
    entities:
      - group.system_monitor
      - group.process_monitor
      - automation.free_space
      
  # Groups
  system_monitor:
    name: System Monitor
    entities:
      - sensor.system_monitor_cpu_use
      - sensor.system_monitor_disk_free_plexmediaserver
      - sensor.system_monitor_disk_use_plexmediaserver
      - sensor.system_monitor_ram_use
      - sensor.system_monitor_received_eth0
      - sensor.system_monitor_sent_eth0
  process_monitor:
    name: Process Monitor
    entities:
      - sensor.process_flexget
      - sensor.process_deluge_web
      - sensor.process_deluged
      - sensor.process_plexpy
      - sensor.process_plex_media_server

#  weathergroup:
 #   name: Current Weather
  #  entities:
   #   - sensor.yr_precipitation
    #  - sensor.yr_symbol
     # - sensor.yr_temperature
      #- sun.sun

  calendar:
    name: Cal
    entities:
      - sensor.jokes_next_shift

  


#  forecast:
 #   entities:
  #    - sensor.owm_forecast

#  plex:
 #   name: Plex
  #  entities:
   #   - sensor.plex

# Notifier setup
notify:
  - name: pushbullet_tom
    platform: pushbullet
    api_key: !secret pushbullet_api

automation:
  - alias: Free space
    trigger:
      platform: numeric_state
      entity_id: sensor.system_monitor_disk_free_plexmediaserver
      below: 100
    action:
      service: notify.pushbullet_tom
      data:
        title: "Disk space low"
        message: "Disk space of your server is low, remaining: {{ states.sensor.system_monitor_disk_free_plexmediaserver.state }} GiB"
  - alias: Update Available
    trigger:
      platform: state
      entity_id: updater.updater
    action:
      service: notify.pushbullet_tom
      data:
        title: "Update available"
        message: "Update available for Home Assistant"

# Weather Prediction
sensor:
#  - platform: demo

  #- platform: command_line
  #  command: 'git fetch && git rev-list --count master..origin/master'
    

  - platform: template
    sensors:
      process_flexget:
        friendly_name: Flexget
        value_template: >
          {% if states.sensor.system_monitor_process_flexget.state == 'on' %}Running
          {% elif states.sensor.system_monitor_process_flexget.state == 'off' %}Not running
          {% else %}Invalid state{% endif %}
        entity_id: sensor.system_monitor_process_flexget
      process_deluged:
        friendly_name: Deluge Daemon
        value_template: >
          {% if states.sensor.system_monitor_process_deluged.state == 'on' %}Running
          {% elif states.sensor.system_monitor_process_deluged.state == 'off' %}Not running
          {% else %}Invalid state{% endif %}          
        entity_id: sensor.system_monitor_process_deluged
      process_deluge_web:
        friendly_name: Deluge Web
        value_template: >
          {% if states.sensor.system_monitor_process_delugeweb.state == 'on' %}Running
          {% elif states.sensor.system_monitor_process_delugedweb.state == 'off' %}Not running
          {% else %}Invalid state{% endif %}
        entity_id: sensor.system_monitor_process_delugeweb
      process_plexpy:
        friendly_name: PlexPy
        value_template: >
          {% if states.sensor.system_monitor_process_plexpy.state == 'on' %}Running
          {% elif states.sensor.system_monitor_process_plexpy.state == 'off' %}Not running
          {% else %}Invalid state{% endif %}
        entity_id: sensor.system_monitor_process_plexpy
      process_plex_media_server:
        friendly_name: Plex Media Server
        value_template: >
          {% if states.sensor.system_monitor_process_plex_media_server.state == 'on' %}Running
          {% elif states.sensor.system_monitor_process_plex_media_server.state == 'off' %}Not running
          {% else %}Invalid state{% endif %}
        entity_id: sensor.system_monitor_process_plex_media_server
      jokes_next_shift:
        friendly_name: "Joke's next shift"
        value_template: >
          {% set texts = ["Vandaag", "Morgen", "Overmorgen"] %}
          {% set start = strptime(states.calendar.jokes_werk.attributes.start_time, '%Y-%m-%d %H:%M:%S') %}
          {% set end = strptime(states.calendar.jokes_werk.attributes.end_time, '%Y-%m-%d %H:%M:%S') %}
          {% set shift = start.strftime('%H:%M') + "-" + end.strftime('%H:%M') %}
          {% set days = (start.date() - now().date()).days %}
          {% set day = texts[days] %}
          {{ day | default("Binnen " + days | string + " dagen") }} {{ shift }} 

#  - platform: openweathermap
#    api_key: !secret owm_api
#    forecast: true
#    monitored_conditions:
#      - weather
#      - temperature
#      - wind_speed
#      - humidity
#      - pressure
#      - clouds
#      - rain
#      - snow
#  - platform: yr
 #   monitored_conditions:
  #    - symbol
   #   - temperature
    #  - precipitation
  - platform: systemmonitor
    entity_namespace: system_monitor
    resources:
      - type: disk_use_percent
        arg: /PlexMediaServer
      - type: disk_free
        arg: /PlexMediaServer
      - type: memory_use_percent
      - type: processor_use
      - type: network_in
        arg: eth0
      - type: network_out
        arg: eth0
      - type: process
        arg: deluged
      - type: process
        arg: deluge-web
      - type: process
        arg: flexget
      - type: process
        arg: Plex Media Server

shell_command:
  get_latest_config: bash /home/hass/.homeassistant/pullconfig.sh

script:
  update_config:
    sequence:
      - service: shell_command.get_latest_config
      - service: homeassistant.restart

#device_tracker:
 # - platform: nmap_tracker
  #  hosts:
   #   - 192.168.1.0/24
    #home_interval: 5

#mqtt:
 # broker: m21.cloudmqtt.com
  #port: 23101
 # username: !secret mqtt_username
 # password: !secret mqtt_pass

#device_tracker:
 # - platform: owntracks

#weather:
 # - platform: demo
  #- platform: openweathermap
   # api_key: !secret owm_api

############# Demo stuff
#alarm_control_panel:
 # - platform: demo

#binary_sensor:
 # - platform: demo

#camera:
 # - platform: demo

#climate: 
 # - platform: demo

#cover:
 # - platform: demo

#fan:
#  - platform: demo

#light:
 # - platform: demo

#lock:
 # - platform: demo

#remote:
 # - platform: demo

#switch:
 # - platform: demo

#tts:
 # - platform: demo
