platform: template
sensors:
  hostname:
    value_template: !secret http.base.url
  password:
    value_template: !secret http.password
  process_flexget:
    friendly_name: Flexget
    value_template: >
      {% if states.sensor.system_monitor_process_flexget.state == 'on' %}Running
      {% elif states.sensor.system_monitor_process_flexget.state == 'off' %}Not running
      {% else %}Invalid state{% endif %}
    entity_id: sensor.system_monitor_process_flexget
    icon_template: '{% if is_state("sensor.system_monitor_process_flexget", "on") %}mdi:checkbox-marked{% else %}mdi:alert-box{% endif %}'
  process_deluged:
    friendly_name: Deluge Daemon
    value_template: >
      {% if states.sensor.system_monitor_process_deluged.state == 'on' %}Running
      {% elif states.sensor.system_monitor_process_deluged.state == 'off' %}Not running
      {% else %}Invalid state{% endif %}          
    entity_id: sensor.system_monitor_process_deluged
    icon_template: '{% if is_state("sensor.system_monitor_process_deluged", "on") %}mdi:checkbox-marked{% else %}mdi:alert-box{% endif %}'
  process_deluge_web:
    friendly_name: Deluge Web
    value_template: >
      {% if states.sensor.system_monitor_process_delugeweb.state == 'on' %}Running
      {% elif states.sensor.system_monitor_process_delugedweb.state == 'off' %}Not running
      {% else %}Invalid state{% endif %}
    entity_id: sensor.system_monitor_process_delugeweb
    icon_template: '{% if is_state("sensor.system_monitor_process_delugeweb", "on") %}mdi:checkbox-marked{% else %}mdi:alert-box{% endif %}'
  process_plexpy:
    friendly_name: PlexPy
    value_template: >
      {% if states.sensor.system_monitor_process_plexpy.state == 'on' %}Running
      {% elif states.sensor.system_monitor_process_plexpy.state == 'off' %}Not running
      {% else %}Invalid state{% endif %}
    entity_id: sensor.system_monitor_process_plexpy
    icon_template: '{% if is_state("sensor.system_monitor_process_plexpy", "on") %}mdi:checkbox-marked{% else %}mdi:alert-box{% endif %}'
  process_plex_media_server:
    friendly_name: Plex Media Server
    value_template: >
      {% if states.sensor.system_monitor_process_plex_media_server.state == 'on' %}Running
      {% elif states.sensor.system_monitor_process_plex_media_server.state == 'off' %}Not running
      {% else %}Invalid state{% endif %}
    entity_id: sensor.system_monitor_process_plex_media_server
    icon_template: '{% if is_state("sensor.system_monitor_process_plex_media_server", "on") %}mdi:checkbox-marked{% else %}mdi:alert-box{% endif %}'
  jokes_next_shift:
    friendly_name: "Joke's next shift"
    value_template: >
      {% if states.calendar.jokes_werk %}
        {% set attrs = states.calendar.jokes_werk.attributes %}
        {% if attrs.start_time and attrs.end_time %}
          {% set start = strptime(states.calendar.jokes_werk.attributes.start_time, '%Y-%m-%d %X') %}
          {% set end = strptime(states.calendar.jokes_werk.attributes.end_time, '%Y-%m-%d %X') %}
          {% if start < now().replace(tzinfo=None) %}
            Nu tot {{ end.strftime('%R') }}
          {% else %}
            {% set texts = ["Vandaag", "Morgen", "Overmorgen"] %}
            {% set shift = start.strftime('%R') + "-" + end.strftime('%R') %}
            {% set days = (start.date() - now().date()).days %}
            {% set day = texts[days] %}
            {{ day | default("Binnen " + days | string + " dagen") }} {{ shift }}
          {% endif %}
        {% else %}
          No new event found
        {% endif %}
      {% else %}
        Calendar failed
      {% endif %}
  new_commits:
    value_template: >
      {{ states("sensor.new_commits") }}
